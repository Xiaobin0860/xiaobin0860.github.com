<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>xl000&#39;s blog</title>
    <description>xl000&#39;s blog
</description>
    <link>http://xiaobin0860.github.io/</link>
    <atom:link href="http://xiaobin0860.github.io/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Sun, 10 Jan 2016 22:32:23 +0800</pubDate>
    <lastBuildDate>Sun, 10 Jan 2016 22:32:23 +0800</lastBuildDate>
    <generator>Jekyll v3.0.1</generator>
    
      <item>
        <title>My first post</title>
        <description>&lt;p&gt;Stay hungry, Stay foolish.&lt;br /&gt;
求知若饥，虚心若愚。&lt;br /&gt;
2016.1.10&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://xiaobin0860.github.io/imgs/20160110.jpg&quot; alt=&quot;小宝&quot; /&gt;&lt;/p&gt;

</description>
        <pubDate>Sun, 10 Jan 2016 21:04:46 +0800</pubDate>
        <link>http://xiaobin0860.github.io/jekyll/update/2016/01/10/fist-post.html</link>
        <guid isPermaLink="true">http://xiaobin0860.github.io/jekyll/update/2016/01/10/fist-post.html</guid>
        
        
        <category>jekyll</category>
        
        <category>update</category>
        
      </item>
    
      <item>
        <title>AutoBuild(1)</title>
        <description>&lt;p&gt;之前做过几个项目，项目版本发布管理都是件令人头疼的事。资源管理、程序打包有太多人工操作在里面，
只要涉及到人式操作就难免出错。使用打包脚本会减少部分操作，但是每次发版甚至是测试人员要包都很麻烦，
一着急还容易出错。一直想实现一个自动打包、发布系统，减少发布打包人为的修改操作。从页面上直接可以看到
项目各平台编译状况，测试也可以直接从上面下载安装。&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;架构、思路

                版本管理系统
                    |
               代码库版本变化
                    |
                ---------
                |       |
                V       V
            平台编译 平台编译
             服务器   服务器
                        |
                        V
                    编译、打包系统
                        |
                        |
                        V
                    管理服务器
                        |
                        V
                       结果
反向：从管理服务器发发布请求到指定平台，平台服务器再向代码仓库拉取最新代码，进行编译。
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;目前已经实现代码库变化，通知编译服务器编译、打包。该系统使用Erlang语言+各种脚本实现。遇到一些问题记录如下：&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;svn提交通知，repos/hooks/下面参照post-commit.tmpl写post-commit脚本&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;svn check update，&lt;code class=&quot;highlighter-rouge&quot;&gt;svn status -u -q&lt;/code&gt;，返回结果前面带&lt;code class=&quot;highlighter-rouge&quot;&gt;*&lt;/code&gt;的是要更新的&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;erlang集群端口管理
    &lt;ul&gt;
      &lt;li&gt;epmd端口默认4369，使用erl的&lt;code class=&quot;highlighter-rouge&quot;&gt;-epmd &quot;epmd -port 5000 -daemon&quot;&lt;/code&gt;参数调整&lt;/li&gt;
      &lt;li&gt;结点通讯端口使用erl的&lt;code class=&quot;highlighter-rouge&quot;&gt;-kernel inet_dist_listen_min 4000 inet_dist_listen_max 4000&lt;/code&gt;控制&lt;/li&gt;
      &lt;li&gt;集群cookie必须相同, erl的&lt;code class=&quot;highlighter-rouge&quot;&gt;-setcookie xxxxx&lt;/code&gt;可以设置，当然也可能通过HOME下&lt;code class=&quot;highlighter-rouge&quot;&gt;.erlang.cookie&lt;/code&gt;文件修改&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;本想直接利用Erlang天然的分布式支持实现远程通知，可能因为svn服务器对外端口转发我做不了(没权限)，最终没有实现。
我所在办公室做了外网端口转发的两台机器是可以实现的。理论上实现目前的功能，svn服务器只要远程调用通知我的编译服务器，
而我的服务器是做过端口转发的，应该能调到才前。不知道什么原因始终调不到。以后有时间再看是什么原因吧。也考虑过使用thrift，
但之前用过，感觉在erlang中使用不是很方便，再加上考虑到以后要有web界面展示，干脆使用ChicagoBoss实现算了。立马使用ChicagoBoss
创建工程，post-commit直接请求url通知，加上之前积累的编译、打包脚本，很快上面流程里的功能实现了。现在测试来要包立马就有新包了^_^&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;img src=&quot;http://xiaobin0860.github.io/imgs/20160108.jpg&quot; alt=&quot;亲&quot; /&gt;&lt;/p&gt;

</description>
        <pubDate>Fri, 08 Jan 2016 00:00:00 +0800</pubDate>
        <link>http://xiaobin0860.github.io/erlang/autobuild/2016/01/08/autobuild(1).html</link>
        <guid isPermaLink="true">http://xiaobin0860.github.io/erlang/autobuild/2016/01/08/autobuild(1).html</guid>
        
        
        <category>erlang</category>
        
        <category>autobuild</category>
        
      </item>
    
      <item>
        <title>markdown syntax</title>
        <description>&lt;p&gt;Markdown is a superset of HTML, so any HTML file is a valid Markdown.
&lt;!-- This means we can use HTML elements in Markdown. --&gt;&lt;/p&gt;

&lt;h2 id=&quot;headings&quot;&gt;Headings&lt;/h2&gt;

&lt;h1 id=&quot;this-is-an-h1&quot;&gt;This is an h1&lt;/h1&gt;
&lt;p&gt;## This is an h2
### This is an h3
#### This is an h4
##### This is an h5
###### This is an h6&lt;/p&gt;

&lt;h1 id=&quot;this-is-an-h1-1&quot;&gt;This is an h1&lt;/h1&gt;
&lt;p&gt;This is an h2
————-&lt;/p&gt;

&lt;h2 id=&quot;text-styles&quot;&gt;Text styles&lt;/h2&gt;

&lt;p&gt;&lt;em&gt;This text is in italics.&lt;/em&gt;&lt;br /&gt;
&lt;em&gt;And so is this text&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;This text is in bold&lt;/strong&gt;&lt;br /&gt;
&lt;strong&gt;And so is this text&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;This text is in both.&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;~~This text is rendered with strikethrough.~~&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;monospace&lt;/code&gt;&lt;/p&gt;

&lt;h2 id=&quot;paragraphs&quot;&gt;Paragraphs&lt;/h2&gt;

&lt;p&gt;This is a paragraph.&lt;/p&gt;

&lt;p&gt;Now I’m in paragraph 2.
I’m still in paragraph 2 too!&lt;/p&gt;

&lt;p&gt;I’m in paragraph three!&lt;/p&gt;

&lt;p&gt;Leave 2 spaces at the end of a line to to a&lt;br /&gt;
line break&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;This is a block quote. You can&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;manually wrap your lines and put a &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;gt;&lt;/code&gt; before every line.
You can also use more than one level
&amp;gt; of indentation.
How neat is that?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;lists&quot;&gt;Lists&lt;/h2&gt;

&lt;p&gt;Unordered lists&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Item1&lt;/li&gt;
  &lt;li&gt;Item2&lt;/li&gt;
  &lt;li&gt;Item3&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;or&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Item1&lt;/li&gt;
  &lt;li&gt;Item2&lt;/li&gt;
  &lt;li&gt;Item3&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;or&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Item1&lt;/li&gt;
  &lt;li&gt;Item2&lt;/li&gt;
  &lt;li&gt;Item3&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Ordered lists&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Item1
    &lt;ul&gt;
      &lt;li&gt;Sub1&lt;/li&gt;
      &lt;li&gt;Sub2&lt;/li&gt;
      &lt;li&gt;Sub3&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Item2&lt;/li&gt;
  &lt;li&gt;Item3&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;code-blocks&quot;&gt;Code blocks&lt;/h2&gt;

&lt;p&gt;You can indicate a code block by indenting a line with four spaces or a tab.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;-module(test).
-export([test/0]).

test() -&amp;gt;
    io:format(&quot;Hello World!~n&quot;).
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;links&quot;&gt;Links&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://xiaobin0860.github.io&quot;&gt;xl000&lt;/a&gt;
&amp;lt;l_xb@foxmail.com&amp;gt;&lt;/p&gt;

</description>
        <pubDate>Wed, 06 Jan 2016 00:00:00 +0800</pubDate>
        <link>http://xiaobin0860.github.io/markdown/2016/01/06/markdown.html</link>
        <guid isPermaLink="true">http://xiaobin0860.github.io/markdown/2016/01/06/markdown.html</guid>
        
        
        <category>markdown</category>
        
      </item>
    
  </channel>
</rss>
